/**
* This file was automatically generated by @cosmwasm/ts-codegen@0.35.7.
* DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
* and run the @cosmwasm/ts-codegen generate command to regenerate this file.
*/

import { UseQueryOptions, useQuery } from "@tanstack/react-query";
import { GroupContract, InstantiateMsg, Member, ExecuteMsg, QueryMsg, MigrateMsg, Addr, InfoResponse, ContractVersion, Uint128, TotalPowerAtHeightResponse, VotingPowerAtHeightResponse } from "./DaoVotingCw4.types";
import { DaoVotingCw4QueryClient } from "./DaoVotingCw4.client";
export interface DaoVotingCw4ReactQuery<TResponse, TData = TResponse> {
  client: DaoVotingCw4QueryClient;
  options?: Omit<UseQueryOptions<TResponse, Error, TData>, "'queryKey' | 'queryFn' | 'initialData'"> & {
    initialData?: undefined;
  };
}
export interface DaoVotingCw4InfoQuery<TData> extends DaoVotingCw4ReactQuery<InfoResponse, TData> {}
export function useDaoVotingCw4InfoQuery<TData = InfoResponse>({
  client,
  options
}: DaoVotingCw4InfoQuery<TData>) {
  return useQuery<InfoResponse, Error, TData>(["daoVotingCw4Info", client.contractAddress], () => client.info(), options);
}
export interface DaoVotingCw4DaoQuery<TData> extends DaoVotingCw4ReactQuery<Addr, TData> {}
export function useDaoVotingCw4DaoQuery<TData = Addr>({
  client,
  options
}: DaoVotingCw4DaoQuery<TData>) {
  return useQuery<Addr, Error, TData>(["daoVotingCw4Dao", client.contractAddress], () => client.dao(), options);
}
export interface DaoVotingCw4TotalPowerAtHeightQuery<TData> extends DaoVotingCw4ReactQuery<TotalPowerAtHeightResponse, TData> {
  args: {
    height?: number;
  };
}
export function useDaoVotingCw4TotalPowerAtHeightQuery<TData = TotalPowerAtHeightResponse>({
  client,
  args,
  options
}: DaoVotingCw4TotalPowerAtHeightQuery<TData>) {
  return useQuery<TotalPowerAtHeightResponse, Error, TData>(["daoVotingCw4TotalPowerAtHeight", client.contractAddress, JSON.stringify(args)], () => client.totalPowerAtHeight({
    height: args.height
  }), options);
}
export interface DaoVotingCw4VotingPowerAtHeightQuery<TData> extends DaoVotingCw4ReactQuery<VotingPowerAtHeightResponse, TData> {
  args: {
    address: string;
    height?: number;
  };
}
export function useDaoVotingCw4VotingPowerAtHeightQuery<TData = VotingPowerAtHeightResponse>({
  client,
  args,
  options
}: DaoVotingCw4VotingPowerAtHeightQuery<TData>) {
  return useQuery<VotingPowerAtHeightResponse, Error, TData>(["daoVotingCw4VotingPowerAtHeight", client.contractAddress, JSON.stringify(args)], () => client.votingPowerAtHeight({
    address: args.address,
    height: args.height
  }), options);
}
export interface DaoVotingCw4GroupContractQuery<TData> extends DaoVotingCw4ReactQuery<Addr, TData> {}
export function useDaoVotingCw4GroupContractQuery<TData = Addr>({
  client,
  options
}: DaoVotingCw4GroupContractQuery<TData>) {
  return useQuery<Addr, Error, TData>(["daoVotingCw4GroupContract", client.contractAddress], () => client.groupContract(), options);
}