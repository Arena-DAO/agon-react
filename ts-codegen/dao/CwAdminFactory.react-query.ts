/**
* This file was automatically generated by @cosmwasm/ts-codegen@0.34.2.
* DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
* and run the @cosmwasm/ts-codegen generate command to regenerate this file.
*/

import { UseQueryOptions, useMutation, UseMutationOptions } from "@tanstack/react-query";
import { ExecuteResult } from "@cosmjs/cosmwasm-stargate";
import { StdFee, Coin } from "@cosmjs/amino";
import { InstantiateMsg, ExecuteMsg, Binary, QueryMsg, MigrateMsg } from "./CwAdminFactory.types";
import { CwAdminFactoryQueryClient, CwAdminFactoryClient } from "./CwAdminFactory.client";
export const cwAdminFactoryQueryKeys = {
  contract: ([{
    contract: "cwAdminFactory"
  }] as const),
  address: (contractAddress: string | undefined) => ([{ ...cwAdminFactoryQueryKeys.contract[0],
    address: contractAddress
  }] as const)
};
export const cwAdminFactoryQueries = {};
export interface CwAdminFactoryReactQuery<TResponse, TData = TResponse> {
  client: CwAdminFactoryQueryClient | undefined;
  options?: Omit<UseQueryOptions<TResponse, Error, TData>, "'queryKey' | 'queryFn' | 'initialData'"> & {
    initialData?: undefined;
  };
}
export interface CwAdminFactoryInstantiateContractWithSelfAdminMutation {
  client: CwAdminFactoryClient;
  msg: {
    codeId: number;
    instantiateMsg: Binary;
    label: string;
  };
  args?: {
    fee?: number | StdFee | "auto";
    memo?: string;
    funds?: Coin[];
  };
}
export function useCwAdminFactoryInstantiateContractWithSelfAdminMutation(options?: Omit<UseMutationOptions<ExecuteResult, Error, CwAdminFactoryInstantiateContractWithSelfAdminMutation>, "mutationFn">) {
  return useMutation<ExecuteResult, Error, CwAdminFactoryInstantiateContractWithSelfAdminMutation>(({
    client,
    msg,
    args: {
      fee,
      memo,
      funds
    } = {}
  }) => client.instantiateContractWithSelfAdmin(msg, fee, memo, funds), options);
}